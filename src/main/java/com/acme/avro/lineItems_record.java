/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.acme.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class lineItems_record extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2133065538119996165L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"lineItems_record\",\"namespace\":\"com.acme.avro\",\"fields\":[{\"name\":\"lineTransType\",\"type\":\"string\"},{\"name\":\"lineType\",\"type\":\"string\"},{\"name\":\"lineSeq\",\"type\":\"int\"},{\"name\":\"posItemId\",\"type\":\"string\"},{\"name\":\"eanNumber\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"jsItemFlag\",\"type\":\"string\"},{\"name\":\"unitPrice\",\"type\":\"string\"},{\"name\":\"quantity\",\"type\":\"string\"},{\"name\":\"uom\",\"type\":\"string\"},{\"name\":\"extendedValue\",\"type\":\"string\"},{\"name\":\"returnCode\",\"type\":\"string\"},{\"name\":\"priceModifier\",\"type\":{\"type\":\"record\",\"name\":\"priceModifier\",\"fields\":[{\"name\":\"promotionCode\",\"type\":\"string\"},{\"name\":\"partnerCode\",\"type\":\"string\"},{\"name\":\"promotionDiscount\",\"type\":\"string\"},{\"name\":\"staffDiscount\",\"type\":\"string\"},{\"name\":\"newPrice\",\"type\":\"string\"},{\"name\":\"promotionType\",\"type\":\"string\"},{\"name\":\"promotionDescription\",\"type\":\"string\"}]}},{\"name\":\"source\",\"type\":\"string\"},{\"name\":\"consumableGroup\",\"type\":\"string\"},{\"name\":\"hierarchy\",\"type\":{\"type\":\"record\",\"name\":\"hierarchy\",\"fields\":[{\"name\":\"groupId\",\"type\":\"string\"},{\"name\":\"subcategoryId\",\"type\":\"string\"},{\"name\":\"categoryId\",\"type\":\"string\"}]}},{\"name\":\"scanData\",\"type\":\"string\"},{\"name\":\"startDateTime\",\"type\":\"string\"},{\"name\":\"endDateTime\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<lineItems_record> ENCODER =
      new BinaryMessageEncoder<lineItems_record>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<lineItems_record> DECODER =
      new BinaryMessageDecoder<lineItems_record>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<lineItems_record> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<lineItems_record> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<lineItems_record>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this lineItems_record to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a lineItems_record from a ByteBuffer. */
  public static lineItems_record fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence lineTransType;
  @Deprecated public java.lang.CharSequence lineType;
  @Deprecated public int lineSeq;
  @Deprecated public java.lang.CharSequence posItemId;
  @Deprecated public java.lang.CharSequence eanNumber;
  @Deprecated public java.lang.CharSequence description;
  @Deprecated public java.lang.CharSequence jsItemFlag;
  @Deprecated public java.lang.CharSequence unitPrice;
  @Deprecated public java.lang.CharSequence quantity;
  @Deprecated public java.lang.CharSequence uom;
  @Deprecated public java.lang.CharSequence extendedValue;
  @Deprecated public java.lang.CharSequence returnCode;
  @Deprecated public com.acme.avro.priceModifier priceModifier;
  @Deprecated public java.lang.CharSequence source;
  @Deprecated public java.lang.CharSequence consumableGroup;
  @Deprecated public com.acme.avro.hierarchy hierarchy;
  @Deprecated public java.lang.CharSequence scanData;
  @Deprecated public java.lang.CharSequence startDateTime;
  @Deprecated public java.lang.CharSequence endDateTime;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public lineItems_record() {}

  /**
   * All-args constructor.
   * @param lineTransType The new value for lineTransType
   * @param lineType The new value for lineType
   * @param lineSeq The new value for lineSeq
   * @param posItemId The new value for posItemId
   * @param eanNumber The new value for eanNumber
   * @param description The new value for description
   * @param jsItemFlag The new value for jsItemFlag
   * @param unitPrice The new value for unitPrice
   * @param quantity The new value for quantity
   * @param uom The new value for uom
   * @param extendedValue The new value for extendedValue
   * @param returnCode The new value for returnCode
   * @param priceModifier The new value for priceModifier
   * @param source The new value for source
   * @param consumableGroup The new value for consumableGroup
   * @param hierarchy The new value for hierarchy
   * @param scanData The new value for scanData
   * @param startDateTime The new value for startDateTime
   * @param endDateTime The new value for endDateTime
   */
  public lineItems_record(java.lang.CharSequence lineTransType, java.lang.CharSequence lineType, java.lang.Integer lineSeq, java.lang.CharSequence posItemId, java.lang.CharSequence eanNumber, java.lang.CharSequence description, java.lang.CharSequence jsItemFlag, java.lang.CharSequence unitPrice, java.lang.CharSequence quantity, java.lang.CharSequence uom, java.lang.CharSequence extendedValue, java.lang.CharSequence returnCode, com.acme.avro.priceModifier priceModifier, java.lang.CharSequence source, java.lang.CharSequence consumableGroup, com.acme.avro.hierarchy hierarchy, java.lang.CharSequence scanData, java.lang.CharSequence startDateTime, java.lang.CharSequence endDateTime) {
    this.lineTransType = lineTransType;
    this.lineType = lineType;
    this.lineSeq = lineSeq;
    this.posItemId = posItemId;
    this.eanNumber = eanNumber;
    this.description = description;
    this.jsItemFlag = jsItemFlag;
    this.unitPrice = unitPrice;
    this.quantity = quantity;
    this.uom = uom;
    this.extendedValue = extendedValue;
    this.returnCode = returnCode;
    this.priceModifier = priceModifier;
    this.source = source;
    this.consumableGroup = consumableGroup;
    this.hierarchy = hierarchy;
    this.scanData = scanData;
    this.startDateTime = startDateTime;
    this.endDateTime = endDateTime;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return lineTransType;
    case 1: return lineType;
    case 2: return lineSeq;
    case 3: return posItemId;
    case 4: return eanNumber;
    case 5: return description;
    case 6: return jsItemFlag;
    case 7: return unitPrice;
    case 8: return quantity;
    case 9: return uom;
    case 10: return extendedValue;
    case 11: return returnCode;
    case 12: return priceModifier;
    case 13: return source;
    case 14: return consumableGroup;
    case 15: return hierarchy;
    case 16: return scanData;
    case 17: return startDateTime;
    case 18: return endDateTime;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: lineTransType = (java.lang.CharSequence)value$; break;
    case 1: lineType = (java.lang.CharSequence)value$; break;
    case 2: lineSeq = (java.lang.Integer)value$; break;
    case 3: posItemId = (java.lang.CharSequence)value$; break;
    case 4: eanNumber = (java.lang.CharSequence)value$; break;
    case 5: description = (java.lang.CharSequence)value$; break;
    case 6: jsItemFlag = (java.lang.CharSequence)value$; break;
    case 7: unitPrice = (java.lang.CharSequence)value$; break;
    case 8: quantity = (java.lang.CharSequence)value$; break;
    case 9: uom = (java.lang.CharSequence)value$; break;
    case 10: extendedValue = (java.lang.CharSequence)value$; break;
    case 11: returnCode = (java.lang.CharSequence)value$; break;
    case 12: priceModifier = (com.acme.avro.priceModifier)value$; break;
    case 13: source = (java.lang.CharSequence)value$; break;
    case 14: consumableGroup = (java.lang.CharSequence)value$; break;
    case 15: hierarchy = (com.acme.avro.hierarchy)value$; break;
    case 16: scanData = (java.lang.CharSequence)value$; break;
    case 17: startDateTime = (java.lang.CharSequence)value$; break;
    case 18: endDateTime = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'lineTransType' field.
   * @return The value of the 'lineTransType' field.
   */
  public java.lang.CharSequence getLineTransType() {
    return lineTransType;
  }

  /**
   * Sets the value of the 'lineTransType' field.
   * @param value the value to set.
   */
  public void setLineTransType(java.lang.CharSequence value) {
    this.lineTransType = value;
  }

  /**
   * Gets the value of the 'lineType' field.
   * @return The value of the 'lineType' field.
   */
  public java.lang.CharSequence getLineType() {
    return lineType;
  }

  /**
   * Sets the value of the 'lineType' field.
   * @param value the value to set.
   */
  public void setLineType(java.lang.CharSequence value) {
    this.lineType = value;
  }

  /**
   * Gets the value of the 'lineSeq' field.
   * @return The value of the 'lineSeq' field.
   */
  public java.lang.Integer getLineSeq() {
    return lineSeq;
  }

  /**
   * Sets the value of the 'lineSeq' field.
   * @param value the value to set.
   */
  public void setLineSeq(java.lang.Integer value) {
    this.lineSeq = value;
  }

  /**
   * Gets the value of the 'posItemId' field.
   * @return The value of the 'posItemId' field.
   */
  public java.lang.CharSequence getPosItemId() {
    return posItemId;
  }

  /**
   * Sets the value of the 'posItemId' field.
   * @param value the value to set.
   */
  public void setPosItemId(java.lang.CharSequence value) {
    this.posItemId = value;
  }

  /**
   * Gets the value of the 'eanNumber' field.
   * @return The value of the 'eanNumber' field.
   */
  public java.lang.CharSequence getEanNumber() {
    return eanNumber;
  }

  /**
   * Sets the value of the 'eanNumber' field.
   * @param value the value to set.
   */
  public void setEanNumber(java.lang.CharSequence value) {
    this.eanNumber = value;
  }

  /**
   * Gets the value of the 'description' field.
   * @return The value of the 'description' field.
   */
  public java.lang.CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'jsItemFlag' field.
   * @return The value of the 'jsItemFlag' field.
   */
  public java.lang.CharSequence getJsItemFlag() {
    return jsItemFlag;
  }

  /**
   * Sets the value of the 'jsItemFlag' field.
   * @param value the value to set.
   */
  public void setJsItemFlag(java.lang.CharSequence value) {
    this.jsItemFlag = value;
  }

  /**
   * Gets the value of the 'unitPrice' field.
   * @return The value of the 'unitPrice' field.
   */
  public java.lang.CharSequence getUnitPrice() {
    return unitPrice;
  }

  /**
   * Sets the value of the 'unitPrice' field.
   * @param value the value to set.
   */
  public void setUnitPrice(java.lang.CharSequence value) {
    this.unitPrice = value;
  }

  /**
   * Gets the value of the 'quantity' field.
   * @return The value of the 'quantity' field.
   */
  public java.lang.CharSequence getQuantity() {
    return quantity;
  }

  /**
   * Sets the value of the 'quantity' field.
   * @param value the value to set.
   */
  public void setQuantity(java.lang.CharSequence value) {
    this.quantity = value;
  }

  /**
   * Gets the value of the 'uom' field.
   * @return The value of the 'uom' field.
   */
  public java.lang.CharSequence getUom() {
    return uom;
  }

  /**
   * Sets the value of the 'uom' field.
   * @param value the value to set.
   */
  public void setUom(java.lang.CharSequence value) {
    this.uom = value;
  }

  /**
   * Gets the value of the 'extendedValue' field.
   * @return The value of the 'extendedValue' field.
   */
  public java.lang.CharSequence getExtendedValue() {
    return extendedValue;
  }

  /**
   * Sets the value of the 'extendedValue' field.
   * @param value the value to set.
   */
  public void setExtendedValue(java.lang.CharSequence value) {
    this.extendedValue = value;
  }

  /**
   * Gets the value of the 'returnCode' field.
   * @return The value of the 'returnCode' field.
   */
  public java.lang.CharSequence getReturnCode() {
    return returnCode;
  }

  /**
   * Sets the value of the 'returnCode' field.
   * @param value the value to set.
   */
  public void setReturnCode(java.lang.CharSequence value) {
    this.returnCode = value;
  }

  /**
   * Gets the value of the 'priceModifier' field.
   * @return The value of the 'priceModifier' field.
   */
  public com.acme.avro.priceModifier getPriceModifier() {
    return priceModifier;
  }

  /**
   * Sets the value of the 'priceModifier' field.
   * @param value the value to set.
   */
  public void setPriceModifier(com.acme.avro.priceModifier value) {
    this.priceModifier = value;
  }

  /**
   * Gets the value of the 'source' field.
   * @return The value of the 'source' field.
   */
  public java.lang.CharSequence getSource() {
    return source;
  }

  /**
   * Sets the value of the 'source' field.
   * @param value the value to set.
   */
  public void setSource(java.lang.CharSequence value) {
    this.source = value;
  }

  /**
   * Gets the value of the 'consumableGroup' field.
   * @return The value of the 'consumableGroup' field.
   */
  public java.lang.CharSequence getConsumableGroup() {
    return consumableGroup;
  }

  /**
   * Sets the value of the 'consumableGroup' field.
   * @param value the value to set.
   */
  public void setConsumableGroup(java.lang.CharSequence value) {
    this.consumableGroup = value;
  }

  /**
   * Gets the value of the 'hierarchy' field.
   * @return The value of the 'hierarchy' field.
   */
  public com.acme.avro.hierarchy getHierarchy() {
    return hierarchy;
  }

  /**
   * Sets the value of the 'hierarchy' field.
   * @param value the value to set.
   */
  public void setHierarchy(com.acme.avro.hierarchy value) {
    this.hierarchy = value;
  }

  /**
   * Gets the value of the 'scanData' field.
   * @return The value of the 'scanData' field.
   */
  public java.lang.CharSequence getScanData() {
    return scanData;
  }

  /**
   * Sets the value of the 'scanData' field.
   * @param value the value to set.
   */
  public void setScanData(java.lang.CharSequence value) {
    this.scanData = value;
  }

  /**
   * Gets the value of the 'startDateTime' field.
   * @return The value of the 'startDateTime' field.
   */
  public java.lang.CharSequence getStartDateTime() {
    return startDateTime;
  }

  /**
   * Sets the value of the 'startDateTime' field.
   * @param value the value to set.
   */
  public void setStartDateTime(java.lang.CharSequence value) {
    this.startDateTime = value;
  }

  /**
   * Gets the value of the 'endDateTime' field.
   * @return The value of the 'endDateTime' field.
   */
  public java.lang.CharSequence getEndDateTime() {
    return endDateTime;
  }

  /**
   * Sets the value of the 'endDateTime' field.
   * @param value the value to set.
   */
  public void setEndDateTime(java.lang.CharSequence value) {
    this.endDateTime = value;
  }

  /**
   * Creates a new lineItems_record RecordBuilder.
   * @return A new lineItems_record RecordBuilder
   */
  public static com.acme.avro.lineItems_record.Builder newBuilder() {
    return new com.acme.avro.lineItems_record.Builder();
  }

  /**
   * Creates a new lineItems_record RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new lineItems_record RecordBuilder
   */
  public static com.acme.avro.lineItems_record.Builder newBuilder(com.acme.avro.lineItems_record.Builder other) {
    return new com.acme.avro.lineItems_record.Builder(other);
  }

  /**
   * Creates a new lineItems_record RecordBuilder by copying an existing lineItems_record instance.
   * @param other The existing instance to copy.
   * @return A new lineItems_record RecordBuilder
   */
  public static com.acme.avro.lineItems_record.Builder newBuilder(com.acme.avro.lineItems_record other) {
    return new com.acme.avro.lineItems_record.Builder(other);
  }

  /**
   * RecordBuilder for lineItems_record instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<lineItems_record>
    implements org.apache.avro.data.RecordBuilder<lineItems_record> {

    private java.lang.CharSequence lineTransType;
    private java.lang.CharSequence lineType;
    private int lineSeq;
    private java.lang.CharSequence posItemId;
    private java.lang.CharSequence eanNumber;
    private java.lang.CharSequence description;
    private java.lang.CharSequence jsItemFlag;
    private java.lang.CharSequence unitPrice;
    private java.lang.CharSequence quantity;
    private java.lang.CharSequence uom;
    private java.lang.CharSequence extendedValue;
    private java.lang.CharSequence returnCode;
    private com.acme.avro.priceModifier priceModifier;
    private com.acme.avro.priceModifier.Builder priceModifierBuilder;
    private java.lang.CharSequence source;
    private java.lang.CharSequence consumableGroup;
    private com.acme.avro.hierarchy hierarchy;
    private com.acme.avro.hierarchy.Builder hierarchyBuilder;
    private java.lang.CharSequence scanData;
    private java.lang.CharSequence startDateTime;
    private java.lang.CharSequence endDateTime;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.acme.avro.lineItems_record.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.lineTransType)) {
        this.lineTransType = data().deepCopy(fields()[0].schema(), other.lineTransType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.lineType)) {
        this.lineType = data().deepCopy(fields()[1].schema(), other.lineType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.lineSeq)) {
        this.lineSeq = data().deepCopy(fields()[2].schema(), other.lineSeq);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.posItemId)) {
        this.posItemId = data().deepCopy(fields()[3].schema(), other.posItemId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.eanNumber)) {
        this.eanNumber = data().deepCopy(fields()[4].schema(), other.eanNumber);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.description)) {
        this.description = data().deepCopy(fields()[5].schema(), other.description);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.jsItemFlag)) {
        this.jsItemFlag = data().deepCopy(fields()[6].schema(), other.jsItemFlag);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.unitPrice)) {
        this.unitPrice = data().deepCopy(fields()[7].schema(), other.unitPrice);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.quantity)) {
        this.quantity = data().deepCopy(fields()[8].schema(), other.quantity);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.uom)) {
        this.uom = data().deepCopy(fields()[9].schema(), other.uom);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.extendedValue)) {
        this.extendedValue = data().deepCopy(fields()[10].schema(), other.extendedValue);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.returnCode)) {
        this.returnCode = data().deepCopy(fields()[11].schema(), other.returnCode);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.priceModifier)) {
        this.priceModifier = data().deepCopy(fields()[12].schema(), other.priceModifier);
        fieldSetFlags()[12] = true;
      }
      if (other.hasPriceModifierBuilder()) {
        this.priceModifierBuilder = com.acme.avro.priceModifier.newBuilder(other.getPriceModifierBuilder());
      }
      if (isValidValue(fields()[13], other.source)) {
        this.source = data().deepCopy(fields()[13].schema(), other.source);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.consumableGroup)) {
        this.consumableGroup = data().deepCopy(fields()[14].schema(), other.consumableGroup);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.hierarchy)) {
        this.hierarchy = data().deepCopy(fields()[15].schema(), other.hierarchy);
        fieldSetFlags()[15] = true;
      }
      if (other.hasHierarchyBuilder()) {
        this.hierarchyBuilder = com.acme.avro.hierarchy.newBuilder(other.getHierarchyBuilder());
      }
      if (isValidValue(fields()[16], other.scanData)) {
        this.scanData = data().deepCopy(fields()[16].schema(), other.scanData);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.startDateTime)) {
        this.startDateTime = data().deepCopy(fields()[17].schema(), other.startDateTime);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.endDateTime)) {
        this.endDateTime = data().deepCopy(fields()[18].schema(), other.endDateTime);
        fieldSetFlags()[18] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing lineItems_record instance
     * @param other The existing instance to copy.
     */
    private Builder(com.acme.avro.lineItems_record other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.lineTransType)) {
        this.lineTransType = data().deepCopy(fields()[0].schema(), other.lineTransType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.lineType)) {
        this.lineType = data().deepCopy(fields()[1].schema(), other.lineType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.lineSeq)) {
        this.lineSeq = data().deepCopy(fields()[2].schema(), other.lineSeq);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.posItemId)) {
        this.posItemId = data().deepCopy(fields()[3].schema(), other.posItemId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.eanNumber)) {
        this.eanNumber = data().deepCopy(fields()[4].schema(), other.eanNumber);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.description)) {
        this.description = data().deepCopy(fields()[5].schema(), other.description);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.jsItemFlag)) {
        this.jsItemFlag = data().deepCopy(fields()[6].schema(), other.jsItemFlag);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.unitPrice)) {
        this.unitPrice = data().deepCopy(fields()[7].schema(), other.unitPrice);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.quantity)) {
        this.quantity = data().deepCopy(fields()[8].schema(), other.quantity);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.uom)) {
        this.uom = data().deepCopy(fields()[9].schema(), other.uom);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.extendedValue)) {
        this.extendedValue = data().deepCopy(fields()[10].schema(), other.extendedValue);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.returnCode)) {
        this.returnCode = data().deepCopy(fields()[11].schema(), other.returnCode);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.priceModifier)) {
        this.priceModifier = data().deepCopy(fields()[12].schema(), other.priceModifier);
        fieldSetFlags()[12] = true;
      }
      this.priceModifierBuilder = null;
      if (isValidValue(fields()[13], other.source)) {
        this.source = data().deepCopy(fields()[13].schema(), other.source);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.consumableGroup)) {
        this.consumableGroup = data().deepCopy(fields()[14].schema(), other.consumableGroup);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.hierarchy)) {
        this.hierarchy = data().deepCopy(fields()[15].schema(), other.hierarchy);
        fieldSetFlags()[15] = true;
      }
      this.hierarchyBuilder = null;
      if (isValidValue(fields()[16], other.scanData)) {
        this.scanData = data().deepCopy(fields()[16].schema(), other.scanData);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.startDateTime)) {
        this.startDateTime = data().deepCopy(fields()[17].schema(), other.startDateTime);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.endDateTime)) {
        this.endDateTime = data().deepCopy(fields()[18].schema(), other.endDateTime);
        fieldSetFlags()[18] = true;
      }
    }

    /**
      * Gets the value of the 'lineTransType' field.
      * @return The value.
      */
    public java.lang.CharSequence getLineTransType() {
      return lineTransType;
    }

    /**
      * Sets the value of the 'lineTransType' field.
      * @param value The value of 'lineTransType'.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder setLineTransType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.lineTransType = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'lineTransType' field has been set.
      * @return True if the 'lineTransType' field has been set, false otherwise.
      */
    public boolean hasLineTransType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'lineTransType' field.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder clearLineTransType() {
      lineTransType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'lineType' field.
      * @return The value.
      */
    public java.lang.CharSequence getLineType() {
      return lineType;
    }

    /**
      * Sets the value of the 'lineType' field.
      * @param value The value of 'lineType'.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder setLineType(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.lineType = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'lineType' field has been set.
      * @return True if the 'lineType' field has been set, false otherwise.
      */
    public boolean hasLineType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'lineType' field.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder clearLineType() {
      lineType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'lineSeq' field.
      * @return The value.
      */
    public java.lang.Integer getLineSeq() {
      return lineSeq;
    }

    /**
      * Sets the value of the 'lineSeq' field.
      * @param value The value of 'lineSeq'.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder setLineSeq(int value) {
      validate(fields()[2], value);
      this.lineSeq = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'lineSeq' field has been set.
      * @return True if the 'lineSeq' field has been set, false otherwise.
      */
    public boolean hasLineSeq() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'lineSeq' field.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder clearLineSeq() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'posItemId' field.
      * @return The value.
      */
    public java.lang.CharSequence getPosItemId() {
      return posItemId;
    }

    /**
      * Sets the value of the 'posItemId' field.
      * @param value The value of 'posItemId'.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder setPosItemId(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.posItemId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'posItemId' field has been set.
      * @return True if the 'posItemId' field has been set, false otherwise.
      */
    public boolean hasPosItemId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'posItemId' field.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder clearPosItemId() {
      posItemId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'eanNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getEanNumber() {
      return eanNumber;
    }

    /**
      * Sets the value of the 'eanNumber' field.
      * @param value The value of 'eanNumber'.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder setEanNumber(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.eanNumber = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'eanNumber' field has been set.
      * @return True if the 'eanNumber' field has been set, false otherwise.
      */
    public boolean hasEanNumber() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'eanNumber' field.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder clearEanNumber() {
      eanNumber = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public java.lang.CharSequence getDescription() {
      return description;
    }

    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.description = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder clearDescription() {
      description = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'jsItemFlag' field.
      * @return The value.
      */
    public java.lang.CharSequence getJsItemFlag() {
      return jsItemFlag;
    }

    /**
      * Sets the value of the 'jsItemFlag' field.
      * @param value The value of 'jsItemFlag'.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder setJsItemFlag(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.jsItemFlag = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'jsItemFlag' field has been set.
      * @return True if the 'jsItemFlag' field has been set, false otherwise.
      */
    public boolean hasJsItemFlag() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'jsItemFlag' field.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder clearJsItemFlag() {
      jsItemFlag = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'unitPrice' field.
      * @return The value.
      */
    public java.lang.CharSequence getUnitPrice() {
      return unitPrice;
    }

    /**
      * Sets the value of the 'unitPrice' field.
      * @param value The value of 'unitPrice'.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder setUnitPrice(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.unitPrice = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'unitPrice' field has been set.
      * @return True if the 'unitPrice' field has been set, false otherwise.
      */
    public boolean hasUnitPrice() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'unitPrice' field.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder clearUnitPrice() {
      unitPrice = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'quantity' field.
      * @return The value.
      */
    public java.lang.CharSequence getQuantity() {
      return quantity;
    }

    /**
      * Sets the value of the 'quantity' field.
      * @param value The value of 'quantity'.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder setQuantity(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.quantity = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'quantity' field has been set.
      * @return True if the 'quantity' field has been set, false otherwise.
      */
    public boolean hasQuantity() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'quantity' field.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder clearQuantity() {
      quantity = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'uom' field.
      * @return The value.
      */
    public java.lang.CharSequence getUom() {
      return uom;
    }

    /**
      * Sets the value of the 'uom' field.
      * @param value The value of 'uom'.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder setUom(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.uom = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'uom' field has been set.
      * @return True if the 'uom' field has been set, false otherwise.
      */
    public boolean hasUom() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'uom' field.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder clearUom() {
      uom = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'extendedValue' field.
      * @return The value.
      */
    public java.lang.CharSequence getExtendedValue() {
      return extendedValue;
    }

    /**
      * Sets the value of the 'extendedValue' field.
      * @param value The value of 'extendedValue'.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder setExtendedValue(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.extendedValue = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'extendedValue' field has been set.
      * @return True if the 'extendedValue' field has been set, false otherwise.
      */
    public boolean hasExtendedValue() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'extendedValue' field.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder clearExtendedValue() {
      extendedValue = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'returnCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getReturnCode() {
      return returnCode;
    }

    /**
      * Sets the value of the 'returnCode' field.
      * @param value The value of 'returnCode'.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder setReturnCode(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.returnCode = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'returnCode' field has been set.
      * @return True if the 'returnCode' field has been set, false otherwise.
      */
    public boolean hasReturnCode() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'returnCode' field.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder clearReturnCode() {
      returnCode = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'priceModifier' field.
      * @return The value.
      */
    public com.acme.avro.priceModifier getPriceModifier() {
      return priceModifier;
    }

    /**
      * Sets the value of the 'priceModifier' field.
      * @param value The value of 'priceModifier'.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder setPriceModifier(com.acme.avro.priceModifier value) {
      validate(fields()[12], value);
      this.priceModifierBuilder = null;
      this.priceModifier = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'priceModifier' field has been set.
      * @return True if the 'priceModifier' field has been set, false otherwise.
      */
    public boolean hasPriceModifier() {
      return fieldSetFlags()[12];
    }

    /**
     * Gets the Builder instance for the 'priceModifier' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.acme.avro.priceModifier.Builder getPriceModifierBuilder() {
      if (priceModifierBuilder == null) {
        if (hasPriceModifier()) {
          setPriceModifierBuilder(com.acme.avro.priceModifier.newBuilder(priceModifier));
        } else {
          setPriceModifierBuilder(com.acme.avro.priceModifier.newBuilder());
        }
      }
      return priceModifierBuilder;
    }

    /**
     * Sets the Builder instance for the 'priceModifier' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.acme.avro.lineItems_record.Builder setPriceModifierBuilder(com.acme.avro.priceModifier.Builder value) {
      clearPriceModifier();
      priceModifierBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'priceModifier' field has an active Builder instance
     * @return True if the 'priceModifier' field has an active Builder instance
     */
    public boolean hasPriceModifierBuilder() {
      return priceModifierBuilder != null;
    }

    /**
      * Clears the value of the 'priceModifier' field.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder clearPriceModifier() {
      priceModifier = null;
      priceModifierBuilder = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'source' field.
      * @return The value.
      */
    public java.lang.CharSequence getSource() {
      return source;
    }

    /**
      * Sets the value of the 'source' field.
      * @param value The value of 'source'.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder setSource(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.source = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'source' field has been set.
      * @return True if the 'source' field has been set, false otherwise.
      */
    public boolean hasSource() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'source' field.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder clearSource() {
      source = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'consumableGroup' field.
      * @return The value.
      */
    public java.lang.CharSequence getConsumableGroup() {
      return consumableGroup;
    }

    /**
      * Sets the value of the 'consumableGroup' field.
      * @param value The value of 'consumableGroup'.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder setConsumableGroup(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.consumableGroup = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'consumableGroup' field has been set.
      * @return True if the 'consumableGroup' field has been set, false otherwise.
      */
    public boolean hasConsumableGroup() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'consumableGroup' field.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder clearConsumableGroup() {
      consumableGroup = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'hierarchy' field.
      * @return The value.
      */
    public com.acme.avro.hierarchy getHierarchy() {
      return hierarchy;
    }

    /**
      * Sets the value of the 'hierarchy' field.
      * @param value The value of 'hierarchy'.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder setHierarchy(com.acme.avro.hierarchy value) {
      validate(fields()[15], value);
      this.hierarchyBuilder = null;
      this.hierarchy = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'hierarchy' field has been set.
      * @return True if the 'hierarchy' field has been set, false otherwise.
      */
    public boolean hasHierarchy() {
      return fieldSetFlags()[15];
    }

    /**
     * Gets the Builder instance for the 'hierarchy' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.acme.avro.hierarchy.Builder getHierarchyBuilder() {
      if (hierarchyBuilder == null) {
        if (hasHierarchy()) {
          setHierarchyBuilder(com.acme.avro.hierarchy.newBuilder(hierarchy));
        } else {
          setHierarchyBuilder(com.acme.avro.hierarchy.newBuilder());
        }
      }
      return hierarchyBuilder;
    }

    /**
     * Sets the Builder instance for the 'hierarchy' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.acme.avro.lineItems_record.Builder setHierarchyBuilder(com.acme.avro.hierarchy.Builder value) {
      clearHierarchy();
      hierarchyBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'hierarchy' field has an active Builder instance
     * @return True if the 'hierarchy' field has an active Builder instance
     */
    public boolean hasHierarchyBuilder() {
      return hierarchyBuilder != null;
    }

    /**
      * Clears the value of the 'hierarchy' field.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder clearHierarchy() {
      hierarchy = null;
      hierarchyBuilder = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'scanData' field.
      * @return The value.
      */
    public java.lang.CharSequence getScanData() {
      return scanData;
    }

    /**
      * Sets the value of the 'scanData' field.
      * @param value The value of 'scanData'.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder setScanData(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.scanData = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'scanData' field has been set.
      * @return True if the 'scanData' field has been set, false otherwise.
      */
    public boolean hasScanData() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'scanData' field.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder clearScanData() {
      scanData = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'startDateTime' field.
      * @return The value.
      */
    public java.lang.CharSequence getStartDateTime() {
      return startDateTime;
    }

    /**
      * Sets the value of the 'startDateTime' field.
      * @param value The value of 'startDateTime'.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder setStartDateTime(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.startDateTime = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'startDateTime' field has been set.
      * @return True if the 'startDateTime' field has been set, false otherwise.
      */
    public boolean hasStartDateTime() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'startDateTime' field.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder clearStartDateTime() {
      startDateTime = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'endDateTime' field.
      * @return The value.
      */
    public java.lang.CharSequence getEndDateTime() {
      return endDateTime;
    }

    /**
      * Sets the value of the 'endDateTime' field.
      * @param value The value of 'endDateTime'.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder setEndDateTime(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.endDateTime = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'endDateTime' field has been set.
      * @return True if the 'endDateTime' field has been set, false otherwise.
      */
    public boolean hasEndDateTime() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'endDateTime' field.
      * @return This builder.
      */
    public com.acme.avro.lineItems_record.Builder clearEndDateTime() {
      endDateTime = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public lineItems_record build() {
      try {
        lineItems_record record = new lineItems_record();
        record.lineTransType = fieldSetFlags()[0] ? this.lineTransType : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.lineType = fieldSetFlags()[1] ? this.lineType : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.lineSeq = fieldSetFlags()[2] ? this.lineSeq : (java.lang.Integer) defaultValue(fields()[2]);
        record.posItemId = fieldSetFlags()[3] ? this.posItemId : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.eanNumber = fieldSetFlags()[4] ? this.eanNumber : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.description = fieldSetFlags()[5] ? this.description : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.jsItemFlag = fieldSetFlags()[6] ? this.jsItemFlag : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.unitPrice = fieldSetFlags()[7] ? this.unitPrice : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.quantity = fieldSetFlags()[8] ? this.quantity : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.uom = fieldSetFlags()[9] ? this.uom : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.extendedValue = fieldSetFlags()[10] ? this.extendedValue : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.returnCode = fieldSetFlags()[11] ? this.returnCode : (java.lang.CharSequence) defaultValue(fields()[11]);
        if (priceModifierBuilder != null) {
          record.priceModifier = this.priceModifierBuilder.build();
        } else {
          record.priceModifier = fieldSetFlags()[12] ? this.priceModifier : (com.acme.avro.priceModifier) defaultValue(fields()[12]);
        }
        record.source = fieldSetFlags()[13] ? this.source : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.consumableGroup = fieldSetFlags()[14] ? this.consumableGroup : (java.lang.CharSequence) defaultValue(fields()[14]);
        if (hierarchyBuilder != null) {
          record.hierarchy = this.hierarchyBuilder.build();
        } else {
          record.hierarchy = fieldSetFlags()[15] ? this.hierarchy : (com.acme.avro.hierarchy) defaultValue(fields()[15]);
        }
        record.scanData = fieldSetFlags()[16] ? this.scanData : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.startDateTime = fieldSetFlags()[17] ? this.startDateTime : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.endDateTime = fieldSetFlags()[18] ? this.endDateTime : (java.lang.CharSequence) defaultValue(fields()[18]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<lineItems_record>
    WRITER$ = (org.apache.avro.io.DatumWriter<lineItems_record>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<lineItems_record>
    READER$ = (org.apache.avro.io.DatumReader<lineItems_record>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
