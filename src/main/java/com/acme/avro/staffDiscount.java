/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.acme.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class staffDiscount extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1488395917340134038L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"staffDiscount\",\"namespace\":\"com.acme.avro\",\"fields\":[{\"name\":\"staffDiscountCard\",\"type\":\"string\"},{\"name\":\"qualifyingSpend\",\"type\":\"string\"},{\"name\":\"discountRate\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<staffDiscount> ENCODER =
      new BinaryMessageEncoder<staffDiscount>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<staffDiscount> DECODER =
      new BinaryMessageDecoder<staffDiscount>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<staffDiscount> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<staffDiscount> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<staffDiscount>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this staffDiscount to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a staffDiscount from a ByteBuffer. */
  public static staffDiscount fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence staffDiscountCard;
  @Deprecated public java.lang.CharSequence qualifyingSpend;
  @Deprecated public java.lang.CharSequence discountRate;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public staffDiscount() {}

  /**
   * All-args constructor.
   * @param staffDiscountCard The new value for staffDiscountCard
   * @param qualifyingSpend The new value for qualifyingSpend
   * @param discountRate The new value for discountRate
   */
  public staffDiscount(java.lang.CharSequence staffDiscountCard, java.lang.CharSequence qualifyingSpend, java.lang.CharSequence discountRate) {
    this.staffDiscountCard = staffDiscountCard;
    this.qualifyingSpend = qualifyingSpend;
    this.discountRate = discountRate;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return staffDiscountCard;
    case 1: return qualifyingSpend;
    case 2: return discountRate;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: staffDiscountCard = (java.lang.CharSequence)value$; break;
    case 1: qualifyingSpend = (java.lang.CharSequence)value$; break;
    case 2: discountRate = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'staffDiscountCard' field.
   * @return The value of the 'staffDiscountCard' field.
   */
  public java.lang.CharSequence getStaffDiscountCard() {
    return staffDiscountCard;
  }

  /**
   * Sets the value of the 'staffDiscountCard' field.
   * @param value the value to set.
   */
  public void setStaffDiscountCard(java.lang.CharSequence value) {
    this.staffDiscountCard = value;
  }

  /**
   * Gets the value of the 'qualifyingSpend' field.
   * @return The value of the 'qualifyingSpend' field.
   */
  public java.lang.CharSequence getQualifyingSpend() {
    return qualifyingSpend;
  }

  /**
   * Sets the value of the 'qualifyingSpend' field.
   * @param value the value to set.
   */
  public void setQualifyingSpend(java.lang.CharSequence value) {
    this.qualifyingSpend = value;
  }

  /**
   * Gets the value of the 'discountRate' field.
   * @return The value of the 'discountRate' field.
   */
  public java.lang.CharSequence getDiscountRate() {
    return discountRate;
  }

  /**
   * Sets the value of the 'discountRate' field.
   * @param value the value to set.
   */
  public void setDiscountRate(java.lang.CharSequence value) {
    this.discountRate = value;
  }

  /**
   * Creates a new staffDiscount RecordBuilder.
   * @return A new staffDiscount RecordBuilder
   */
  public static com.acme.avro.staffDiscount.Builder newBuilder() {
    return new com.acme.avro.staffDiscount.Builder();
  }

  /**
   * Creates a new staffDiscount RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new staffDiscount RecordBuilder
   */
  public static com.acme.avro.staffDiscount.Builder newBuilder(com.acme.avro.staffDiscount.Builder other) {
    return new com.acme.avro.staffDiscount.Builder(other);
  }

  /**
   * Creates a new staffDiscount RecordBuilder by copying an existing staffDiscount instance.
   * @param other The existing instance to copy.
   * @return A new staffDiscount RecordBuilder
   */
  public static com.acme.avro.staffDiscount.Builder newBuilder(com.acme.avro.staffDiscount other) {
    return new com.acme.avro.staffDiscount.Builder(other);
  }

  /**
   * RecordBuilder for staffDiscount instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<staffDiscount>
    implements org.apache.avro.data.RecordBuilder<staffDiscount> {

    private java.lang.CharSequence staffDiscountCard;
    private java.lang.CharSequence qualifyingSpend;
    private java.lang.CharSequence discountRate;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.acme.avro.staffDiscount.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.staffDiscountCard)) {
        this.staffDiscountCard = data().deepCopy(fields()[0].schema(), other.staffDiscountCard);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.qualifyingSpend)) {
        this.qualifyingSpend = data().deepCopy(fields()[1].schema(), other.qualifyingSpend);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.discountRate)) {
        this.discountRate = data().deepCopy(fields()[2].schema(), other.discountRate);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing staffDiscount instance
     * @param other The existing instance to copy.
     */
    private Builder(com.acme.avro.staffDiscount other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.staffDiscountCard)) {
        this.staffDiscountCard = data().deepCopy(fields()[0].schema(), other.staffDiscountCard);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.qualifyingSpend)) {
        this.qualifyingSpend = data().deepCopy(fields()[1].schema(), other.qualifyingSpend);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.discountRate)) {
        this.discountRate = data().deepCopy(fields()[2].schema(), other.discountRate);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'staffDiscountCard' field.
      * @return The value.
      */
    public java.lang.CharSequence getStaffDiscountCard() {
      return staffDiscountCard;
    }

    /**
      * Sets the value of the 'staffDiscountCard' field.
      * @param value The value of 'staffDiscountCard'.
      * @return This builder.
      */
    public com.acme.avro.staffDiscount.Builder setStaffDiscountCard(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.staffDiscountCard = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'staffDiscountCard' field has been set.
      * @return True if the 'staffDiscountCard' field has been set, false otherwise.
      */
    public boolean hasStaffDiscountCard() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'staffDiscountCard' field.
      * @return This builder.
      */
    public com.acme.avro.staffDiscount.Builder clearStaffDiscountCard() {
      staffDiscountCard = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'qualifyingSpend' field.
      * @return The value.
      */
    public java.lang.CharSequence getQualifyingSpend() {
      return qualifyingSpend;
    }

    /**
      * Sets the value of the 'qualifyingSpend' field.
      * @param value The value of 'qualifyingSpend'.
      * @return This builder.
      */
    public com.acme.avro.staffDiscount.Builder setQualifyingSpend(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.qualifyingSpend = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'qualifyingSpend' field has been set.
      * @return True if the 'qualifyingSpend' field has been set, false otherwise.
      */
    public boolean hasQualifyingSpend() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'qualifyingSpend' field.
      * @return This builder.
      */
    public com.acme.avro.staffDiscount.Builder clearQualifyingSpend() {
      qualifyingSpend = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'discountRate' field.
      * @return The value.
      */
    public java.lang.CharSequence getDiscountRate() {
      return discountRate;
    }

    /**
      * Sets the value of the 'discountRate' field.
      * @param value The value of 'discountRate'.
      * @return This builder.
      */
    public com.acme.avro.staffDiscount.Builder setDiscountRate(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.discountRate = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'discountRate' field has been set.
      * @return True if the 'discountRate' field has been set, false otherwise.
      */
    public boolean hasDiscountRate() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'discountRate' field.
      * @return This builder.
      */
    public com.acme.avro.staffDiscount.Builder clearDiscountRate() {
      discountRate = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public staffDiscount build() {
      try {
        staffDiscount record = new staffDiscount();
        record.staffDiscountCard = fieldSetFlags()[0] ? this.staffDiscountCard : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.qualifyingSpend = fieldSetFlags()[1] ? this.qualifyingSpend : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.discountRate = fieldSetFlags()[2] ? this.discountRate : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<staffDiscount>
    WRITER$ = (org.apache.avro.io.DatumWriter<staffDiscount>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<staffDiscount>
    READER$ = (org.apache.avro.io.DatumReader<staffDiscount>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
